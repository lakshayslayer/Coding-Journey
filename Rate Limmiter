// Lakshay's code
#include <bits/stdc++.h>
using namespace std;

struct cinfo{
    deque<pair<int,int>> dq;
    int limit=0;
    int maxLimit;
};

map<int,cinfo> mp;

bool rateLimit(int customerId, int requestedAt){
    bool isPresent = mp.find(customerId) != mp.end();
    if(isPresent){

        auto &cusQ = mp[customerId].dq;
        while(!cusQ.empty() && cusQ.front().first + 60 <= requestedAt){
            
            int val =cusQ.front().second;
            cusQ.pop_front();
            mp[customerId].limit -= val;
        }
        
        if(mp[customerId].maxLimit > mp[customerId].limit){
            
            if(!cusQ.empty() && cusQ.back().first == requestedAt){
                cusQ.back().second++;
            }
            else{
                cusQ.push_back({requestedAt,1});
            }
            mp[customerId].limit ++;
            
            return true;
        }
        
        return false;

    }
    else{
        mp[customerId].dq.push_back({requestedAt,1});
        mp[customerId].limit = 1;
        return true;
    }
}

void setLimit(int customerId, int setmaxLimit){
    cout<<"setlimit"<<" "<<customerId<<endl;
    mp[customerId].maxLimit = setmaxLimit;
}
   
int main() {

    setLimit(1,3);
    cout<<rateLimit(1,1); cout<<endl;
    cout<<rateLimit(1,2); cout<<endl;
    cout<<rateLimit(1,2); cout<<endl;
    cout<<rateLimit(1,5); cout<<endl;
    cout<<rateLimit(1,61); cout<<endl;
    cout<<rateLimit(1,62); cout<<endl;
    cout<<rateLimit(1,63); cout<<endl;
    cout<<rateLimit(1,66); cout<<endl;


    return 0;
}

